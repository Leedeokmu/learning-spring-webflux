#logging:
#  level:
#    root: debug

resilience4j:
  ratelimiter:
    instances:
      calculator-service:
        limitRefreshPeriod: 20s # 구간의 길이
        limitForPeriod: 5 # 구간에서 허용할 콜수
        timeoutDuration: 5s # 제한이 시작하는 시점에서부터 들어온 요청을 얼마나 기다릴지
      review-service:
        limitRefreshPeriod: 20s
        limitForPeriod: 3
        timeoutDuration: 0s

#  circuitbreaker:
#    instances:
#      review-service:
#        slidingWindowType: COUNT_BASED # 실패를 판단하는 타입
#        slidingWindowSize: 4
#        minimumNumberOfCalls: 2 # 몇 번의 호출 이상일 때 실패로 판단할 것인
#        failureRateThreshold: 50 # 몇 % 까지 에러를 허용할 것인지
#        waitDurationInOpenState: 10s # cb 가 열린 상태에서 얼마가 지난 후 half-open 으로 변경할 것인지
#        permittedNumberOfCallsInHalfOpenState: 2 # half-open 상태에서 성공 판단을 위해 몇 번까지 호출할 것인지
#        recordExceptions:
#          - org.springframework.web.reactive.function.client.WebClientResponseException
#          - java.util.concurrent.TimeoutException

sec01:
  product.service: http://localhost:7070/sec01/product/
  promotion.service: http://localhost:7070/sec01/promotion/
  review.service: http://localhost:7070/sec01/review/

sec02:
  delta.service: http://localhost:7070/sec02/delta/
  frontier.service: http://localhost:7070/sec02/frontier/
  jetblue.service: http://localhost:7070/sec02/jetblue/

sec03:
  product.service: http://localhost:7070/sec03/product/
  user.service: http://localhost:7070/sec03/user/
  inventory.service: http://localhost:7070/sec03/inventory/
  shipping.service: http://localhost:7070/sec03/shipping/

sec04:
  product.service: http://localhost:7070/sec04/product/
  user.service: http://localhost:7070/sec04/user/
  inventory.service: http://localhost:7070/sec04/inventory/
  shipping.service: http://localhost:7070/sec04/shipping/


sec05:
  car.service: http://localhost:7070/sec05/car/reserve
  room.service: http://localhost:7070/sec05/room/reserve

sec06:
  product.service: http://localhost:7070/sec06/product/
  review.service: http://localhost:7070/sec06/review/

sec07:
  product.service: http://localhost:7070/sec07/product/
  review.service: http://localhost:7070/sec07/review/

sec08:
  product.service: http://localhost:7070/sec08/product/
  review.service: http://localhost:7070/sec08/review/

sec09:
  product.service: http://localhost:7070/sec09/product/
  review.service: http://localhost:7070/sec09/review/
